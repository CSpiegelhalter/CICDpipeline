name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      TAG: ${{ github.sha }}

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Stop infinite loop if commit is from GitHub Actions
      if: github.actor == 'github-actions'
      run: |
        echo "Triggered by GitHub Actions bot â€” skipping workflow."
        exit 0

    - name: Set lowercase owner
      run: |
        echo "owner_lc=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV
        echo "image_name=ghcr.io/${GITHUB_REPOSITORY_OWNER,,}/todo-api" >> $GITHUB_ENV

    - name: Log in to GHCR
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ env.owner_lc }} --password-stdin

    - name: Build Docker image
      run: docker build -t ${{ env.image_name }}:${{ env.TAG }} -f todo-api/Dockerfile todo-api

    - name: Push Docker image
      run: docker push ${{ env.image_name }}:${{ env.TAG }}

    - name: Clone manifests repo (same repo in this case)
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

        git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/CSpiegelhalter/CICDpipeline.git
        cd CICDpipeline/k8s-manifest

        # Update image tag in deployment.yaml
        sed -i "s|image: .*|image: ${{ env.image_name }}:${{ env.TAG }}|" deployment.yaml

        git add deployment.yaml
        if git diff --cached --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update image to ${{ env.TAG }} [skip ci]"
          git push
        fi

